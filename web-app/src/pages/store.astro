---
import Layout from "../layouts/Layout.astro";
import NavBar from "../components/NavBar.astro";
import StoreNav from "../components/StoreNav.astro";
import Items from "../components/Items.astro";
import Reviews from "../components/Reviews.astro";

const queryParams = Astro.url.searchParams;
const storeId = parseInt(queryParams.get("storeId")!);
const name = queryParams.get("name");

if (!storeId || !name) {
    return Astro.redirect("/");
}

let username;
let city: string;

const userIdCookie = Astro.cookies.get("user-id");
if (userIdCookie) {
    const url = "http://identity:3000/profile/?accountId=" + userIdCookie.value;
    const response = await fetch(url);
    if (response.ok) {
        const data = await response.json();
        username = data.name.split(" ")[0];
        city = data.city;
    } else {
        Astro.cookies.delete("user-id");
        return Astro.redirect("/login");
    }
} else {
    return Astro.redirect("/login");
}
---

<Layout title="UtalEats">
    <main>
        <NavBar username={username} city={city} />
        <StoreNav storeId={storeId} name={name} />
        <div>
            <Items storeId={storeId} />
            <Reviews storeId={storeId} />
        </div>
    </main>
</Layout>
<script>
    if (document.getElementById("username")?.innerText == "") {
        window.location.href = "/login";
    }

    const itemsContainer = document.getElementById("items-container");
    const cart = document.getElementById("cart") as HTMLSpanElement;
    const savedItems =
        JSON.parse(localStorage.getItem("savedItems") ?? "{}") || [];
    cart.innerText = savedItems.reduce((total: number, item: SavedItem) => total + item.quantity, 0).toString();

    interface SavedItem {
        name: string;
        imagePath: string;
        price: number;
        quantity: number;
    }

    itemsContainer?.addEventListener("click", (event: MouseEvent) => {
        const target =
            event.target instanceof Element
                ? (event.target as Element).closest(".plus")
                : null;

        if (target) {
            const plusElement = target as HTMLElement;

            const name = plusElement.dataset.name || "";
            const imagePath = plusElement.dataset.image || "";
            const price = parseFloat(plusElement.dataset.price || "0");

            const savedItems: SavedItem[] = JSON.parse(
                localStorage.getItem("savedItems") || "[]",
            );

            const existingItem = savedItems.find((item) => item.name === name);

            if (existingItem) {
                existingItem.quantity += 1;
            } else {
                const newItem: SavedItem = {
                    name,
                    imagePath,
                    price,
                    quantity: 1,
                };
                savedItems.push(newItem);
            }

            localStorage.setItem("savedItems", JSON.stringify(savedItems));

            if (cart) {
                cart.innerText = savedItems.reduce((total, item) => total + item.quantity, 0).toString();
            }
        }
    });
</script>
<style>
    main {
        display: flex;
        flex-direction: column;
        gap: 20px;
    }

    div {
        display: flex;
        width: 100%;
        gap: 40px;
    }
</style>

