services:
  identity:
    build: ./identity
    restart: always
    develop:
      watch:
        - action: sync
          path: ./identity
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./identity/package.json
        - action: rebuild
          path: ./identity/Dockerfile
    environment:
      DATABASE_URL: postgres://identity:identity@identity-db:5432/identity
    depends_on:
      identity-db:
        condition: service_healthy
        restart: true

  identity-db:
    image: postgres:alpine
    restart: always
    volumes:
      - identity-db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: identity
      POSTGRES_USER: identity
      POSTGRES_PASSWORD: identity
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U identity -d identity"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  reverse-proxy:
    build: ./reverse-proxy
    ports:
      - "80:80"
    depends_on:
      - identity
    develop:
      watch:
        - action: sync+restart
          path: reverse-proxy/nginx.conf
          target: /etc/nginx/nginx.conf
volumes:
  identity-db-data:
